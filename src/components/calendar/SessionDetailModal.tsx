// src/components/calendar/SessionDetailModal.tsx
import React, { useState } from 'react';
import { format, parseISO } from 'date-fns';
import { ru } from 'date-fns/locale'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ª–æ–∫–∞–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ —Ä—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
import type { Session, Client } from '../../types/database';
import { Button } from '../ui/Button';
import { X, Calendar, Clock, User, CreditCard, Mail, CheckCircle, Edit, Send, Ban } from 'lucide-react';
import { decrypt } from '../../utils/encryption'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏

interface SessionDetailModalProps {
  session: Session; // –î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  client: Client; // –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —Å–µ—Å—Å–∏–µ–π
  isOpen: boolean; // –û—Ç–∫—Ä—ã—Ç –ª–∏ –º–æ–¥–∞–ª
  onClose: () => void; // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
  onEdit: (session: Session) => void; // –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  onMarkCompleted: (id: string) => void; // –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  onMarkPaid: (id: string, paymentMethod: string) => void; // –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ –æ–ø–ª–∞—Ç—ã
  onMarkReceiptSent: (id: string) => void; // –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞
  onReschedule: (session: Session) => void; // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–æ—Å–∞
  onForgiveDebt: (id: string) => void; // –§—É–Ω–∫—Ü–∏—è —Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–≥–∞
  onMarkCancelled: (id: string) => void; // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏
}

const SessionDetailModal: React.FC<SessionDetailModalProps> = ({
  session,
  client,
  isOpen,
  onClose,
  onEdit,
  onMarkCompleted,
  onMarkPaid,
  onMarkReceiptSent,
  onReschedule,
  onForgiveDebt,
  onMarkCancelled, // –ù–æ–≤—ã–π –ø—Ä–æ–ø—Å
}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
  const [showPaymentMenu, setShowPaymentMenu] = useState(false);
  const [tempPaymentMethod, setTempPaymentMethod] = useState(session.payment_method || 'cash');

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—Ç—É" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é
  const handleShowPaymentMenu = () => {
    setShowPaymentMenu(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
  const handleSelectPaymentMethod = (method: string) => {
    setTempPaymentMethod(method);
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –∏ —Å—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º onMarkPaid
    setShowPaymentMenu(false);
    onMarkPaid(session.id, method); // –ü–µ—Ä–µ–¥–∞—ë–º ID –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥
  };

  if (!isOpen || !session || !client) {
    return null;
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const formatDateTime = (dateString: string) => format(parseISO(dateString), 'd MMMM yyyy –≤ HH:mm', { locale: ru });
  const formatDate = (dateString: string) => format(parseISO(dateString), 'd MMMM yyyy', { locale: ru });

  // –ü—Å–µ–≤–¥–æ-—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∑–∞–º–µ—Ç–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å –∫–ª—é—á–æ–º)
  // const decryptedNote = session.note_encrypted ? decrypt(session.note_encrypted) : '';
  // –ü–æ–∫–∞ —á—Ç–æ, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
  const decryptedNote = session.note_encrypted ? session.note_encrypted : '';

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –±–µ–π–¥–∂–∞ —Å—Ç–∞—Ç—É—Å–∞
  const statusBadgeColor = () => {
    switch (session.status) {
      case 'scheduled': return 'bg-blue-100 text-blue-800';
      case 'completed': return 'bg-green-100 text-green-800';
      case 'cancelled': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –æ–ø–ª–∞—Ç—ã
  const paymentIndicatorColor = session.paid ? 'text-green-600' : 'text-yellow-600';
  const receiptIndicatorColor = session.receipt_sent ? 'text-green-600' : 'text-yellow-600';

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-2xl font-bold text-gray-900">
              –°–µ—Å—Å–∏—è #{session.session_number} —Å {client.name}
            </h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-500 focus:outline-none"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ"
            >
              <X className="h-6 w-6" />
            </button>
          </div>

          {/* –ë–ª–æ–∫ 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-gray-50 p-4 rounded-lg mb-4">
            <h3 className="text-lg font-semibold text-gray-900 mb-2">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-600">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</span>
                <span className="font-medium">{formatDateTime(session.scheduled_at)}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
                <span className="font-medium">{session.duration} –º–∏–Ω—É—Ç</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–§–æ—Ä–º–∞—Ç:</span>
                <span className="font-medium">{session.format === 'online' ? 'üíª –û–Ω–ª–∞–π–Ω' : 'üìç –û—Ñ–ª–∞–π–Ω'}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusBadgeColor()}`}>
                  {session.status === 'scheduled' ? '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞' :
                   session.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω–∞' :
                   session.status === 'cancelled' ? '–û—Ç–º–µ–Ω–µ–Ω–∞' : session.status}
                </span>
              </div>
            </div>
          </div>

          {/* –ë–ª–æ–∫ 2: –§–∏–Ω–∞–Ω—Å—ã */}
          <div className="bg-blue-50 p-4 rounded-lg mb-4">
            <h3 className="text-lg font-semibold text-gray-900 mb-2">–§–∏–Ω–∞–Ω—Å—ã</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-600">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                <span className="font-medium">{session.price} ‚ÇΩ</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–û–ø–ª–∞—á–µ–Ω–æ:</span>
                <span className={paymentIndicatorColor}>
                  {session.paid ? '‚úì –î–∞' : '‚ö† –ù–µ—Ç'}
                </span>
              </div>
              {session.paid && (
                <div className="flex justify-between">
                  <span className="text-gray-600">–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã:</span>
                  <span className="font-medium">{session.paid_at ? formatDate(session.paid_at) : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                </div>
              )}
              {session.paid && (
                <div className="flex justify-between">
                  <span className="text-gray-600">–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:</span>
                  <span className={receiptIndicatorColor}>
                    {session.receipt_sent ? '‚úì –î–∞' : '‚è∞ –ù–µ—Ç'}
                  </span>
                </div>
              )}
              {session.paid && session.receipt_sent && session.receipt_sent_at && (
                <div className="flex justify-between">
                  <span className="text-gray-600">–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞:</span>
                  <span className="font-medium">{formatDate(session.receipt_sent_at)}</span>
                </div>
              )}
            </div>
          </div>

          {/* –ë–ª–æ–∫ 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ */}
          <div className="bg-gray-50 p-4 rounded-lg mb-4">
            <h3 className="text-lg font-semibold text-gray-900 mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-600">–ò–º—è:</span>
                <span className="font-medium">{client.name}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">ID –∫–ª–∏–µ–Ω—Ç–∞:</span>
                <span className="font-medium">{client.id}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π:</span>
                <span className="font-medium">{client.total_sessions}</span>
              </div>
              <div>
                <Button variant="outline" size="sm" className="mt-2">
                  –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞ ‚Üí
                </Button>
              </div>
            </div>
          </div>

          {/* –ë–ª–æ–∫ 4: –ó–∞–º–µ—Ç–∫–∞ –æ —Å–µ—Å—Å–∏–∏ */}
          {decryptedNote && (
            <div className="bg-white p-4 rounded-lg mb-4 border border-gray-200">
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–ó–∞–º–µ—Ç–∫–∞ –æ —Å–µ—Å—Å–∏–∏</h3>
              <p className="text-gray-600">
                {decryptedNote}
              </p>
            </div>
          )}

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex flex-wrap gap-2 mt-6">
            {session.status === 'scheduled' && (
              <>
                <Button
                  variant="outline"
                  onClick={() => onMarkCompleted(session.id)}
                >
                  <CheckCircle className="mr-2 h-4 w-4" />
                  –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–≤–µ—Ä—à—ë–Ω–Ω–æ–π
                </Button>
                <Button
                  variant="outline"
                  onClick={() => onReschedule(session)}
                >
                  <Edit className="mr-2 h-4 w-4" />
                  –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏
                </Button>
                {/* –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∏—Ç—å" –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω—ã —Å–µ—Å—Å–∏–∏ */}
                <Button
                  variant="destructive"
                  onClick={() => onMarkCancelled(session.id)} // –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
                >
                  <Ban className="mr-2 h-4 w-4" />
                  –û—Ç–º–µ–Ω–∏—Ç—å
                </Button>
              </>
            )}
            {session.status === 'completed' && !session.paid && (
              <div className="relative">
                <Button
                  variant="outline"
                  onClick={handleShowPaymentMenu} // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
                >
                  <CreditCard className="mr-2 h-4 w-4" />
                  –û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—Ç—É
                </Button>
                {showPaymentMenu && (
                  <div className="absolute left-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-20 border border-gray-200">
                    {['cash', 'card', 'platform', 'transfer'].map((method) => (
                      <button
                        key={method}
                        onClick={() => handleSelectPaymentMethod(method)}
                        className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                      >
                        {method === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–µ' :
                         method === 'card' ? '–ö–∞—Ä—Ç–∞' :
                         method === 'platform' ? '–ß–µ—Ä–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É' : '–ü–µ—Ä–µ–≤–æ–¥'}
                      </button>
                    ))}
                  </div>
                )}
              </div>
            )}
            {session.status === 'completed' && session.paid && !session.receipt_sent && (
              <Button
                variant="outline"
                onClick={() => onMarkReceiptSent(session.id)}
              >
                <Send className="mr-2 h-4 w-4" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫
              </Button>
            )}
            {session.status === 'completed' && session.paid && session.receipt_sent && (
              <Button
                variant="outline"
                onClick={() => onEdit(session)}
              >
                <Edit className="mr-2 h-4 w-4" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            )}
            {session.status === 'completed' && session.paid && !session.receipt_sent && (
              <Button
                variant="outline"
                onClick={() => onEdit(session)}
              >
                <Edit className="mr-2 h-4 w-4" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            )}
            {session.status === 'completed' && session.paid && session.receipt_sent && (
              <Button
                variant="outline"
                onClick={() => onForgiveDebt(session.id)}
              >
                –°–ø–∏—Å–∞—Ç—å –¥–æ–ª–≥
              </Button>
            )}
            {/* –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ "cancelled" */}
            {session.status !== 'cancelled' && (
              <Button
                variant="outline"
                onClick={() => onEdit(session)}
              >
                <Edit className="mr-2 h-4 w-4" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default SessionDetailModal;